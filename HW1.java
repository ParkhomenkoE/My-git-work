package JQA;

public class HW1 {
    public static void main(String[] args) {
        int[] Arrray1 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,21,22,23};    // создаем массив длиной 22
        // обойти массив циклом и посчитать сумму элементов с начала и до конца
        int sum = 0;  // перед началом цикла сумма не считалась, поэтому равна нулю
        for (int i = 0; i < Arrray1.length; i++) {     // обходим массив циклом
            sum = sum + Arrray1[i];  // с предыдущей суммой складываем элемент находящийся в массиве под индексом 0, он равен 1
        }
        return;

        // посчитать сумму элементов с конца в начало
        int sum = 0;
        for (int i = Arrray1.length; i = 0; i--) {  // обходим массив с последнего индекса к первому
            sum = sum + Arrray1[i]; // считаем сумму элемента находящегося в ячейке под последним индексом с уже имеющейся суммой
        }
        return;

        // посчитать сумму элементов сначала с четными а потом с нечетными индексами
        int sum1 = 0; // сумма для элементов в четными индексами равна нулю
        int sum2 = 0;  // сумма для элементов с нечетными индексами равна нулю
        for (int i = 0; i < Arrray1.length; i++) {  //  обходим массив от нулевого индекса до заданной длины
            if (i%2 == 0 ) {  // если число четное, т.е. целое
                sum1 = sum1 + Arrray1[i]; // то сладываем элемент c cуммой 1
            }
            sum2 = sum2 + Arrray1[i]; // если элемент был нечетным, то складываем его со второй суммой
            return;
        }
        sum = sum1 + sum2;  // по завершению цикла складываем обе суммы

        // пройтись циклом так что бы суммировались первый и послежний, потом второй и предпослежний и тд
        int sum = 0;
        for (int i = 0; i < Arrray1.length/2; i++) {
            sum = sum + (Arrray1[i] + Arrray1[Arrray1.length - (i + 1)]);
        }
        return;
        

    }








}